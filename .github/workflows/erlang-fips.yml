name: Build erlang with FIPS
on:
  workflow_dispatch:

###
#  Build erlang with FIPS enabled
#  We have to build erlang from source to enable FIPS. The default APT pkg is not compiled with it.

#  This action is based on xDome similar process and the following:
#  https://github.com/rabbitmq/erlang-debian-package/blob/OTP-26.x/ubuntu/22.04/.github/workflows/test-ubuntu-jammy.yaml
###

env:
  ERLANG_TAG_VERSION: OTP-26.2.5.4
  ERLANG_DEBIAN_PACKAGE_TAG_VERSION: OTP-26.x/ubuntu/22.04
  ERLANG_DEBIAN_PACKAGE_COMMIT: 3fbf92ec309069f737eb1f3fb9e610531a931274
jobs:
  build-erlang:
    container:
      image: ubuntu:jammy
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            ca-certificates git wget \
            make g++ pkg-config ncurses-dev gcc libssl-dev 

      - name: Install openssl-fips
        run: |
          # Debugging
          set -x

          # Exit immediately if a command exists with a non-zero status
          set -e

          # Treat unset variables as an error when substituting.
          set -u
          
          # Install openssl with fips enabled
          cd /tmp
          wget https://www.openssl.org/source/openssl-3.0.9.tar.gz
          tar -xf openssl-3.0.9.tar.gz
          cd openssl-3.0.9
          ./Configure enable-fips
          make
          make install

          ln -sf /usr/local/lib64/libcrypto.so.3 /lib/x86_64-linux-gnu/libcrypto.so.3
          ln -sf /usr/local/lib64/libssl.so.3 /lib/x86_64-linux-gnu/libssl.so.3
          
          # Config fips
          export OPENSSL_CNF="/usr/local/ssl/openssl.cnf"
          export FIPSMODULE_CNF="/usr/local/ssl/fipsmodule.cnf"

          sed -i "/^\[openssl_init\]/i\\.include ${FIPSMODULE_CNF}\n" "$OPENSSL_CNF"
          sed -i '/^providers = provider_sect/a\alg_section = algorithm_sect' "$OPENSSL_CNF"
          sed -i 's/^\(default = default_sect\)/# \1/' "$OPENSSL_CNF"
          sed -i 's/^# fips = fips_sect/fips = fips_sect/' "$OPENSSL_CNF"
          sed -i '/^fips = fips_sect/a\base = base_sect' "$OPENSSL_CNF"
          sed -i '/^base = base_sect/a\\n[base_sect]\nactivate = 1\n\n[algorithm_sect]\ndefault_properties = fips=yes' "$OPENSSL_CNF"

          # Verify that fips is enabled
          openssl list -providers

      - name: Build erlang
        run: |
          set -eux

          export DEBIAN_FRONTEND=noninteractive

          # Install build tools
          apt-get install -y build-essential devscripts equivs gnupg rsync git-buildpackage
                    
          # This was supposed to be in action/checkout@v4 but the action doesn't init .git
          git clone --depth 1 --branch ${{ env.ERLANG_TAG_VERSION }} https://github.com/erlang/otp.git
          git clone --branch ${{ env.ERLANG_DEBIAN_PACKAGE_TAG_VERSION }} https://github.com/rabbitmq/erlang-debian-package.git

          cd erlang-debian-package
          git checkout $ERLANG_DEBIAN_PACKAGE_COMMIT
          cd ..

          dist_version=debian-$(cat /etc/debian_version)
          cp -a erlang-debian-package/debian otp/
          cd otp/

          branch=erlang-debian-package-by-rabbitmq
          git checkout -b "$branch"

          cat > ~/.gbp.conf <<EOF
          [DEFAULT]
          upstream-tag = $ERLANG_TAG_VERSION
          EOF

          for fn in $(find lib/*/doc -name standard -or -name archive); do
              rm -rf "$fn"
          done

          mk-build-deps -i -t 'apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y'
          rm -f erlang-build-deps*

          # We add here `--enable-fips` to the configure command so that Erlang will be compiled with it
          sed -i -E 's/(\s+)--prefix=/\1--enable-fips --prefix=/' debian/rules

          gbp buildpackage \
            --git-ignore-new \
            --git-debian-branch="$branch" \
            --no-sign | tee /tmp/erlang-build.logs

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: erlang-fips-artifacts
          path: |
            erlang-*.deb
            erlang-*.ddeb
            erlang_*.dsc
            erlang*build*
          if-no-files-found: error
          retention-days: 60
